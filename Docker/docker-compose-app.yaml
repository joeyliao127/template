services:
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: ${PROJECT_NAME}_pgadmin
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
        ports:
            - "${PGADMIN_PORT}:${PGADMIN_PORT}"
        networks:
            project_net:
                ipv4_address: ${PGADMIN_HOST}
    springboot:
        container_name: ${PROJECT_NAME}_springboot
        build:
            context: ../BE
            dockerfile: Dockerfile
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
            - "${DEBUG_PORT}:${DEBUG_PORT}"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - BACKEND_PORT=${BACKEND_PORT}
            - PROJECT_NAME=${PROJECT_NAME}
        volumes:
            - ../BE/SpringBoot/target:/app
        networks:
            project_net:
                ipv4_address: ${BACKEND_HOST}
    nuxt:
        container_name: ${PROJECT_NAME}_nuxt
        build:
            context: ../FE
            dockerfile: Dockerfile
        ports:
            - "${FRONTEND_PORT}:${FRONTEND_PORT}"
        volumes:
            - ../FE/Nuxt:/app
            # 匿名 volume，在本機的/var/lib/docker/volumes/<隨機字串>/_data中
            # 避免 Mac 和 Linux npm平台問題
            - /app/node_modules
        networks:
            project_net:
                ipv4_address: ${FRONTEND_HOST}

    nginx:
        container_name: ${PROJECT_NAME}_nginx
        image: nginx:alpine
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "./nginx/conf.d:/etc/nginx/conf.d"
            - "./nginx/ssl:/etc/nginx/ssl"
        depends_on:
            - springboot
            - nuxt
        networks:
            project_net:
                ipv4_address: ${NGINX_HOST}
networks:
    project_net:
        name: ${PROJECT_NAME}_net
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${DOCKER_NETWORK}
